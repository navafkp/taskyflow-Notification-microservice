version: '3'
services:
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    command: "python manage.py runserver 0.0.0.0:8300"
    environment:
      DEBUG: 'true'
    ports:
      - '8300:8300'
    volumes:
      - .:/notificationapp
    depends_on:
      - notificationdb
    healthcheck:
        test: ["CMD", "curl", "http://localhost:8300"]
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - taskynetwork
    expose:
      - "8300"

  notificationdb:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_DB : "taskynotification"
      POSTGRES_USER : ${POSTGRES_USER}
      POSTGRES_PASSWORD : ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - dbfilenotification:/var/lib/postgresql/data
    command: ["postgres", "-c", "max_connections=300", "-c", "log_statement=all", "-c", "log_duration=on"]
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "taskynotification", "-U", "postgres"]
    networks:
      - taskynetwork

  queue:
    build: 
      context: .
      dockerfile: Dockerfile
    command: ["python", "consumer.py"]
    depends_on:
      - notificationdb
    healthcheck:
      test: ["CMD", "python", "consumer.py"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskynetwork

volumes:
  dbfilenotification:

networks:
  taskynetwork:
    external: true


     

